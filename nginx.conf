 events {
}

http {
    
  # Define a localserver listening on 80 port
  server {
    # Define the port where the local server listen
    listen 5100;
    
    location /socket-service {
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $host;

      proxy_pass http://localhost:5102;

      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
    }
    location /chat-socket/ {
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $host;

      proxy_pass http://localhost:5104;

      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
    }
    location /sendmsg/ {
        proxy_pass http://localhost:8082;
    }
    location /notify/ {
        proxy_pass http://localhost:5102;
    }
    location /play/ {
        proxy_pass http://localhost:5101;
    }
    location /mono/ {
        rewrite ^/mono/(.*)$ /$1 break;
        proxy_pass http://localhost:5105;
    }

    # Define a rule for the route /my-api2
    # Here all requests to /my-api2 are redirected to http://192.168.10.40:8888
    # The URL is rewritten before being sent to the new server
    # e.g if the request "/my-api2/vehicle/45" is received by Nginx
    # the request is rewritten in "/vehicle/45" ("/my-api2" is removed) before being sent to the server http://192.168.10.40:8888
    #location /my-api2 {
    #    rewrite ^/my-api2/(.*)$ /$1 break;
    #    proxy_pass http://192.168.10.40:8888;
    #}

    # Define a rule for the route /
    # Here all requests to / are redirected http://192.168.10.100:4000;
    # In General this kind of rules is used for calling front resources
    location / {
      proxy_pass http://localhost:5173;
    }
  }
}